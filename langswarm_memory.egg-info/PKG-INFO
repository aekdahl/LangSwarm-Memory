Metadata-Version: 2.1
Name: langswarm-memory
Version: 0.0.1
Summary: LangSwarm-Memory: A versatile memory management framework for multi-agent systems, supporting advanced retrieval, reranking workflows, and domain-specific templates for autonomous AI solutions.
Home-page: https://github.com/aekdahl/langswarm-memory
Author: Alexander Ekdahl
Author-email: alexander.ekdahl@gmail.com
License: MIT
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy>=1.17.3
Requires-Dist: torch>=1.4.0
Requires-Dist: sqlalchemy>=0.7.0
Requires-Dist: rank-bm25>=0.1
Requires-Dist: weaviate-client>=0.1.0
Requires-Dist: qdrant-client>=0.1.3
Requires-Dist: openai>=0.1.0
Requires-Dist: llama-index>=0.4.4.post1
Requires-Dist: milvus>=2.1.0
Requires-Dist: langchain>=0.0.1
Requires-Dist: aioredis>=0.0.2
Requires-Dist: sentence-transformers>=0.1.0
Requires-Dist: google-cloud-storage>=0.20.0
Requires-Dist: redis>=2.6.1
Requires-Dist: pinecone-client>=0.7.5
Requires-Dist: transformers>=0.1
Provides-Extra: langchain
Requires-Dist: langchain>=0.0.1; extra == "langchain"
Provides-Extra: llama-index
Requires-Dist: llama-index>=0.4.4.post1; extra == "llama-index"
Provides-Extra: pinecone-client
Requires-Dist: pinecone-client>=0.7.5; extra == "pinecone-client"
Provides-Extra: weaviate-client
Requires-Dist: weaviate-client>=0.1.0; extra == "weaviate-client"
Provides-Extra: milvus
Requires-Dist: milvus>=2.1.0; extra == "milvus"
Provides-Extra: qdrant-client
Requires-Dist: qdrant-client>=0.1.3; extra == "qdrant-client"
Provides-Extra: sqlalchemy
Requires-Dist: sqlalchemy>=0.7.0; extra == "sqlalchemy"
Provides-Extra: sentence-transformers
Requires-Dist: sentence-transformers>=0.1.0; extra == "sentence-transformers"
Provides-Extra: rank-bm25
Requires-Dist: rank-bm25>=0.1; extra == "rank-bm25"
Provides-Extra: redis
Requires-Dist: redis>=2.6.1; extra == "redis"
Provides-Extra: aioredis
Requires-Dist: aioredis>=0.0.2; extra == "aioredis"
Provides-Extra: google-cloud-storage
Requires-Dist: google-cloud-storage>=0.20.0; extra == "google-cloud-storage"
Provides-Extra: openai
Requires-Dist: openai>=0.1.0; extra == "openai"
Provides-Extra: transformers
Requires-Dist: transformers>=0.1; extra == "transformers"
Provides-Extra: all
Requires-Dist: sqlalchemy>=0.7.0; extra == "all"
Requires-Dist: rank-bm25>=0.1; extra == "all"
Requires-Dist: weaviate-client>=0.1.0; extra == "all"
Requires-Dist: qdrant-client>=0.1.3; extra == "all"
Requires-Dist: openai>=0.1.0; extra == "all"
Requires-Dist: llama-index>=0.4.4.post1; extra == "all"
Requires-Dist: milvus>=2.1.0; extra == "all"
Requires-Dist: langchain>=0.0.1; extra == "all"
Requires-Dist: aioredis>=0.0.2; extra == "all"
Requires-Dist: sentence-transformers>=0.1.0; extra == "all"
Requires-Dist: google-cloud-storage>=0.20.0; extra == "all"
Requires-Dist: redis>=2.6.1; extra == "all"
Requires-Dist: pinecone-client>=0.7.5; extra == "all"
Requires-Dist: transformers>=0.1; extra == "all"


# LangSwarm-Memory

LangSwarm-Memory is a modular and extensible memory management framework designed to support multi-agent systems in diverse AI-driven applications. It provides powerful tools for retrieval, reranking, and workflow orchestration, making it ideal for autonomous AI solutions.

## Features

- **Retrieval Workflows**: Hybrid, temporal, federated, cross-domain, and more.
- **Advanced Reranking**: Multi-agent and combined reranking workflows for improved relevance.
- **Domain-Specific Templates**: Pre-built workflows for biomedical research, customer support, legal documents, and more.
- **Pluggable Adapters**: Integrations with LangChain, LlamaIndex, and various databases (e.g., Pinecone, Redis, SQLite, etc.).

## Installation

To install LangSwarm-Memory, use pip:

```bash
pip install langswar-memory
```

## Usage

### Example: Hybrid Retrieval and Reranking Workflow

```python
from langswar_memory.templates.hybrid import HybridRetrievalRerankingWorkflow

# Configuration
dense_config = {"backend": "pinecone", "api_key": "your-api-key"}
sparse_config = {"backend": "bm25"}
reranker_configs = [{"reranker": "SemanticReranker", "params": {"model_name": "all-MiniLM-L6-v2"}}]
documents = [
    {"text": "What is LangSwarm?", "metadata": {"source": "docs"}},
    {"text": "LangSwarm is a multi-agent framework.", "metadata": {"source": "tutorials"}}
]

# Initialize and run the workflow
workflow = HybridRetrievalRerankingWorkflow(dense_config, sparse_config, reranker_configs, documents)
response = workflow.run("What is LangSwarm?")
print(response)
```

## Components

### Templates
- **`hybrid.py`**: Combines dense and sparse retrieval with reranking.
- **`biomed.py`**: Biomedical literature retrieval and ranking.
- **`legal.py`**: Legal document retrieval for case preparation.
- **`chatbot.py`**: Knowledge-based chatbot workflows.
- **... and more**

### Rerankers
- Multi-agent and combined reranking strategies for improved document scoring.

### Adapters
- Database integrations (e.g., Pinecone, SQLite, Redis, etc.).
- LangChain and LlamaIndex connectors.

## Contributing

Contributions are welcome! Please open an issue or pull request on [GitHub](https://github.com/your-repo/langswarm-memory).

## License

LangSwarm-Memory is licensed under the [MIT License](LICENSE).
